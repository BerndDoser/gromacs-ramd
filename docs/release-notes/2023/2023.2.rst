GROMACS 2023.2 release notes
----------------------------

This version was released on TODO, 2023. These release notes
document the changes that have taken place in GROMACS since the
previous 2023.1 version, to fix known issues. It also incorporates all
fixes made in version 2022.5 and earlier, which you can find described
in the :ref:`release-notes`.

.. Note to developers!
   Please use """"""" to underline the individual entries for fixed issues in the subfolders,
   otherwise the formatting on the webpage is messed up.
   Also, please use the syntax :issue:`number` to reference issues on GitLab, without
   a space between the colon and number!

Fixes where mdrun could behave incorrectly
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Fix numerical instability with free-energy and LJ-PME
"""""""""""""""""""""""""""""""""""""""""""""""""""""

When combining free-energy calculation with PME for Lennard-Jones
interactions, large rounding error would cause instabilities when
two atoms were at short distance.

:issue:`4780`

Fix mdrun domain decomposition setup limit of 715827882 atoms
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

An overflow in the domain decomposition grid setup limited
the maximum number of atoms that could be simulated to max_int/3,
unless the -dd option was specified.

:issue:`4627`

Fixes for ``gmx`` tools
^^^^^^^^^^^^^^^^^^^^^^^

Avoid error in tools reading tpr files with energy minimization
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Many tools would exit with an error "No v in input file" when reading
a tpr file with integrator set to energy minimization, NM or TPI.

:issue:`4774`

Tools now retain chain identifiers when reading PDB is used as input
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

:issue:`4776`

The gmx hbond tool could produce random ouput
"""""""""""""""""""""""""""""""""""""""""""""

Because memory was not initialized, the gmx hbond tool could produce
random output. This would not go unnoticed. This also fixes issues
with the -ac and -life options.

:issue:`4801`

Fixes that affect portability
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Miscellaneous
^^^^^^^^^^^^^

gmxapi.commandline_operation environment variable filtering
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

A new utility (:py:func:`gmxapi.runtime.filtered_mpi_environ()`) is available
to remove MPI-related environment variables from :py:data:`os.environ`, such as
to prepare the subprocess environment of `gmxapi.commandline_operation`.

This is a follow-up to :issue:`4423`, for which the original fix appeared to be insufficient.

:issue:`4736`

build-dependent checking for gmxapi runtime arguments
"""""""""""""""""""""""""""""""""""""""""""""""""""""

Depending on whether |Gromacs| was built with MPI support or thread-MPI support,
some :doc:`/onlinehelp/gmx-mdrun` options are not defined.
Such errors may only appear in the MD log file,
and can thus be hard to identify in API use cases.

Additional checking has been added to :py:func:`gmxapi.simulation.workflow.from_tpr`
to try to preempt user errors,
and additional usage notes have been added to `gmxapi.mdrun`.

:issue:`4771`

gmxapi.mdrun task uniqueness
""""""""""""""""""""""""""""

Fix a bug in which all `gmxapi.mdrun` simulation tasks had the same ID (and working directory).

:issue:`4795`

Fix for crash when CUDA Graphs are enabled on multi-GPU
=======================================================

A bug was introduced into version 2023.1 resulting in a crash when the
non-default CUDA Graphs experimental feature was enabled on multi-GPU,
caused by the introduction of extra syncronization which is not
required for the CUDA graphs codepath. This version fixes the issue by
avoiding this syncronization when graphs are in use.

:issue:`4786`

Enable XTC support for gigantic systems
=======================================

The (old) XTC format uses an internal char buffer whose size in
bytes was stored as an integer in the file, which led to crashes
when storing systems with more than roughly 300 million atoms.
This version fixes the issue by introducing a 64-bit size only
for large systems, and using a different magic number (2023) in
the XTC header. This will only change the XTC format for large
systems (which anyway would lead to crashes in the old version).
Short-term the large system XTC files might not be readable by
external tools (you will get errors about incorrect magic number),
but we are working with external packages to update their
implementations.

:issue:`4628`
